into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

into device label H_EC code_regex B1DC,\s+16, replace_matched begin DC10,   8,\n    DC11,   8, end;
into device label H_EC code_regex B1FV,\s+16, replace_matched begin FV10,   8,\n    FV11,   8, end;
into device label H_EC code_regex B1FC,\s+16, replace_matched begin FC10,   8,\n    FC11,   8, end;
into device label H_EC code_regex B1CR,\s+16, replace_matched begin CR10,   8,\n    CR11,   8, end;
into device label H_EC code_regex B1RC,\s+16, replace_matched begin RC10,   8,\n    RC11,   8, end;
into device label H_EC code_regex B1VT,\s+16, replace_matched begin VT10,   8,\n    VT11,   8, end;
into device label H_EC code_regex CHGR,\s+16, replace_matched begin GRH0,   8,\n    GRH1,   8, end;
into device label H_EC code_regex XX11,\s+16, replace_matched begin X110,   8,\n    X111,   8, end;
into device label H_EC code_regex XX15,\s+16, replace_matched begin X150,   8,\n    X151,   8, end;


into method label _BIF code_regex \(B1DC, replaceall_matched begin (B1B2(DC10,DC11), end;
into method label _BST code_regex B1FV\) replaceall_matched begin B1B2(FV10,FV11)) end;
into method label _BIF code_regex \(B1FC, replaceall_matched begin (B1B2(FC10,FC11), end;
into method label _BIF code_regex \(B1FC\) replaceall_matched begin (B1B2(FC10,FC11)) end;
into method label _BST code_regex \(B1CR, replaceall_matched begin (B1B2(CR10,CR11), end;
into method label _BST code_regex \(B1RC, replaceall_matched begin (B1B2(RC10,RC11), end;
into method label _BST code_regex \(B1VT, replaceall_matched begin (B1B2(VT10,VT11), end;

#utility methods to read/write buffers from/to EC

into method label RE1B parent_label H_EC remove_entry;
into method label RECB parent_label H_EC remove_entry;
into device label H_EC insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
	OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
	Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
	Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
	ShiftRight(Arg1, 3, Arg1)\n
	Name(TEMP, Buffer(Arg1) { })\n
	Add(Arg0, Arg1, Arg1)\n
	Store(0, Local0)\n
	While (LLess(Arg0, Arg1))\n
	{
		Store(RE1B(Arg0), Index(TEMP, Local0))\n
		Increment(Arg0)\n
		Increment(Local0)\n
	}\n
	Return(TEMP)\n
}\n
end;

into device label H_EC insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

into_all method code_regex If\s+\([\\]?_OSI\s+\(\"Windows\s2015\"\)\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2015"))) end;

into device label BAT0 replace_content
begin
Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID \n
Name (_UID, One)  // _UID: Unique ID \n
Method (_STA, 0, NotSerialized)  // _STA: Status \n
{\n
    If ((ECWR & 0x02))\n
    {\n
        Return (0x1F)\n
    }\n

    Return (Zero)\n
}\n

Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information \n
{\n
    Name (BPKG, Package (0x0D)\n
    {\n
        Zero, \n
        Ones, \n
        Ones, \n
        One, \n
        Ones, \n
        Zero, \n
        Zero, \n
        0x64, \n
        Zero, \n
        "SR Real Battery", \n
        "123456789", \n
        "Real", \n
        "Intel SR 1"\n
    })\n
    Local0 = B1B2(FV10, FV11)\n
    Local1 = ((B1B2(DC10, DC11) * Local0) / 0x03E8)\n
    Local2 = ((B1B2(FC10, FC11) * Local0) / 0x03E8)\n
    BPKG [One] = Local1\n
    BPKG [0x02] = Local2\n
    If (B1B2 (FC10, FC11))\n
    {\n
        BPKG [0x05] = (Local2 / 0x0A)\n
        BPKG [0x06] = (Local2 / 0x19)\n
        BPKG [0x07] = (Local1 / 0x64)\n
    }\n

    Return (BPKG) /* \_SB_.PCI0.LPCB.H_EC.BAT0._BIF.BPKG */ \n
}\n

Method (_BST, 0, NotSerialized)  // _BST: Battery Status \n
{\n
    Name (PKG1, Package (0x04)\n
    {\n
        Ones, \n
        Ones, \n
        Ones, \n
        Ones\n
    })\n
    PKG1 [Zero] = (B1ST & 0x07)\n
    If ((B1ST & One))\n
    {\n
        Local0 = (B1B2(CR10, CR11) * B1B2(FV10, FV11))\n
        Local0 = (Local0 / 0x03E8)\n
        PKG1 [One] = Local0\n
    }\n
    Else\n
    {\n
        Local0 = (B1B2(CR10, CR11) * B1B2(FV10, FV11)) \n
        Local0 = (Local0 / 0x03E8) \n
        PKG1 [One] = Local0 \n
    }\n

    Local1 = B1B2(FV10, FV11)\n
    PKG1 [0x02] = ((B1B2(RC10, RC11) * Local1) / 
        0x03E8) \n
    PKG1 [0x03] = B1B2(VT10, VT11) \n
    Return (PKG1) /* \_SB_.PCI0.LPCB.H_EC.BAT0._BST.PKG1 */\n
}\n

Method (_PCL, 0, NotSerialized)  // _PCL: Power Consumer List \n
{\n
    Return (_SB) /* \_SB_ */ \n
}\n

end;